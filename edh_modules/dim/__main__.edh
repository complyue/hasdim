
# much like you `import numpy as np` as in Python
case import (** _ ) 'dim' of { hd } -> { pass }
# bring useful classes to top level
import ( Vector, MVector, Column, **_ ) hd


while true { # this is the *Loop* in so-called REPL
  # Read+Eval (console.readCommand) -> Print (console.print) -> Loop

  case console.readCommand( ps1= "(dim)Đ: ", ps2= "Đ| " ) of {
    batteries.quit -> { break }
    batteries.dir -> printDir()
    { cmdVal } -> {
      console.print( cmdVal )
      cmdVal = nil # clear it
    }
  }

} $=> { # catch exceptions

  { { IOError:exc } } -> {
    console.fatal <| 'IO error - ' ++ exc
    rethrow # escalate it to the program loop of the
    # host interpreter, let it decide what to do.
  }

  { cmdExc } -> {
    console.print( 'Recovered from error', exception=cmdExc )
  }

}
